# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mcpserver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mcpserver.proto',
  package='archivematica',
  syntax='proto3',
  serialized_pb=_b('\n\x0fmcpserver.proto\x12\rarchivematica\"\x07\n\x05\x45mpty\"&\n\x16\x41pproveTransferRequest\x12\x0c\n\x04UUID\x18\x01 \x01(\t\"+\n\x17\x41pproveTransferResponse\x12\x10\n\x08\x61pproved\x18\x01 \x01(\x08\"4\n\x11\x41pproveJobRequest\x12\x0c\n\x04UUID\x18\x01 \x01(\t\x12\x11\n\tchainUUID\x18\x02 \x01(\t\"&\n\x12\x41pproveJobResponse\x12\x10\n\x08\x61pproved\x18\x01 \x01(\x08\"\xa5\x03\n ListJobsAwaitingApprovalResponse\x12\x41\n\x04jobs\x18\x01 \x03(\x0b\x32\x33.archivematica.ListJobsAwaitingApprovalResponse.Job\x12\x15\n\rtransferCount\x18\x02 \x01(\x05\x12\x13\n\x0bingestCount\x18\x03 \x01(\x05\x1a\x91\x02\n\x03Job\x12\x0c\n\x04UUID\x18\x01 \x01(\t\x12N\n\x08unitType\x18\x02 \x01(\x0e\x32<.archivematica.ListJobsAwaitingApprovalResponse.Job.UnitType\x12K\n\x07\x63hoices\x18\x03 \x03(\x0b\x32:.archivematica.ListJobsAwaitingApprovalResponse.Job.Choice\x1a,\n\x06\x43hoice\x12\r\n\x05value\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\"1\n\x08UnitType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08TRANSFER\x10\x01\x12\n\n\x06INGEST\x10\x02\"Z\n)ListMicroserviceChoiceReplacementsRequest\x12\x18\n\x10microserviceUUID\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\"\x99\x03\n*ListMicroserviceChoiceReplacementsResponse\x12m\n\x0creplacements\x18\x02 \x03(\x0b\x32W.archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement\x1a\xfb\x01\n\x1dMicroserviceChoiceReplacement\x12\x18\n\x10microserviceUUID\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12y\n\targuments\x18\x03 \x03(\x0b\x32\x66.archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.ArgumentsEntry\x1a\x30\n\x0e\x41rgumentsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xe4\x01\n\'SetMicroserviceChoiceReplacementRequest\x12\x18\n\x10microserviceUUID\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12X\n\targuments\x18\x03 \x03(\x0b\x32\x45.archivematica.SetMicroserviceChoiceReplacementRequest.ArgumentsEntry\x1a\x30\n\x0e\x41rgumentsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"O\n\'ListMicroserviceChoiceDuplicatesRequest\x12\x10\n\x08linkName\x18\x01 \x01(\t\x12\x12\n\nchoiceName\x18\x02 \x01(\t\"\xb0\x01\n(ListMicroserviceChoiceDuplicatesResponse\x12U\n\nduplicates\x18\x01 \x03(\x0b\x32\x41.archivematica.ListMicroserviceChoiceDuplicatesResponse.Duplicate\x1a-\n\tDuplicate\x12\x0f\n\x07srcUUID\x18\x01 \x01(\t\x12\x0f\n\x07\x64stUUID\x18\x02 \x01(\t2\xc7\x05\n\tMCPServer\x12`\n\x0f\x41pproveTransfer\x12%.archivematica.ApproveTransferRequest\x1a&.archivematica.ApproveTransferResponse\x12Q\n\nApproveJob\x12 .archivematica.ApproveJobRequest\x1a!.archivematica.ApproveJobResponse\x12\x61\n\x18ListJobsAwaitingApproval\x12\x14.archivematica.Empty\x1a/.archivematica.ListJobsAwaitingApprovalResponse\x12\x99\x01\n\"ListMicroserviceChoiceReplacements\x12\x38.archivematica.ListMicroserviceChoiceReplacementsRequest\x1a\x39.archivematica.ListMicroserviceChoiceReplacementsResponse\x12p\n SetMicroserviceChoiceReplacement\x12\x36.archivematica.SetMicroserviceChoiceReplacementRequest\x1a\x14.archivematica.Empty\x12\x93\x01\n ListMicroserviceChoiceDuplicates\x12\x36.archivematica.ListMicroserviceChoiceDuplicatesRequest\x1a\x37.archivematica.ListMicroserviceChoiceDuplicatesResponseb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_UNITTYPE = _descriptor.EnumDescriptor(
  name='UnitType',
  full_name='archivematica.ListJobsAwaitingApprovalResponse.Job.UnitType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSFER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INGEST', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=595,
  serialized_end=644,
)
_sym_db.RegisterEnumDescriptor(_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_UNITTYPE)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='archivematica.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=41,
)


_APPROVETRANSFERREQUEST = _descriptor.Descriptor(
  name='ApproveTransferRequest',
  full_name='archivematica.ApproveTransferRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='UUID', full_name='archivematica.ApproveTransferRequest.UUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=43,
  serialized_end=81,
)


_APPROVETRANSFERRESPONSE = _descriptor.Descriptor(
  name='ApproveTransferResponse',
  full_name='archivematica.ApproveTransferResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='approved', full_name='archivematica.ApproveTransferResponse.approved', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=83,
  serialized_end=126,
)


_APPROVEJOBREQUEST = _descriptor.Descriptor(
  name='ApproveJobRequest',
  full_name='archivematica.ApproveJobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='UUID', full_name='archivematica.ApproveJobRequest.UUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chainUUID', full_name='archivematica.ApproveJobRequest.chainUUID', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=128,
  serialized_end=180,
)


_APPROVEJOBRESPONSE = _descriptor.Descriptor(
  name='ApproveJobResponse',
  full_name='archivematica.ApproveJobResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='approved', full_name='archivematica.ApproveJobResponse.approved', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=182,
  serialized_end=220,
)


_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_CHOICE = _descriptor.Descriptor(
  name='Choice',
  full_name='archivematica.ListJobsAwaitingApprovalResponse.Job.Choice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='archivematica.ListJobsAwaitingApprovalResponse.Job.Choice.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='archivematica.ListJobsAwaitingApprovalResponse.Job.Choice.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=549,
  serialized_end=593,
)

_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='archivematica.ListJobsAwaitingApprovalResponse.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='UUID', full_name='archivematica.ListJobsAwaitingApprovalResponse.Job.UUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unitType', full_name='archivematica.ListJobsAwaitingApprovalResponse.Job.unitType', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='choices', full_name='archivematica.ListJobsAwaitingApprovalResponse.Job.choices', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_CHOICE, ],
  enum_types=[
    _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_UNITTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=371,
  serialized_end=644,
)

_LISTJOBSAWAITINGAPPROVALRESPONSE = _descriptor.Descriptor(
  name='ListJobsAwaitingApprovalResponse',
  full_name='archivematica.ListJobsAwaitingApprovalResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='jobs', full_name='archivematica.ListJobsAwaitingApprovalResponse.jobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transferCount', full_name='archivematica.ListJobsAwaitingApprovalResponse.transferCount', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ingestCount', full_name='archivematica.ListJobsAwaitingApprovalResponse.ingestCount', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=223,
  serialized_end=644,
)


_LISTMICROSERVICECHOICEREPLACEMENTSREQUEST = _descriptor.Descriptor(
  name='ListMicroserviceChoiceReplacementsRequest',
  full_name='archivematica.ListMicroserviceChoiceReplacementsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='microserviceUUID', full_name='archivematica.ListMicroserviceChoiceReplacementsRequest.microserviceUUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='archivematica.ListMicroserviceChoiceReplacementsRequest.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=646,
  serialized_end=736,
)


_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT_ARGUMENTSENTRY = _descriptor.Descriptor(
  name='ArgumentsEntry',
  full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.ArgumentsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.ArgumentsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.ArgumentsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1100,
  serialized_end=1148,
)

_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT = _descriptor.Descriptor(
  name='MicroserviceChoiceReplacement',
  full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='microserviceUUID', full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.microserviceUUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arguments', full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.arguments', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT_ARGUMENTSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=897,
  serialized_end=1148,
)

_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE = _descriptor.Descriptor(
  name='ListMicroserviceChoiceReplacementsResponse',
  full_name='archivematica.ListMicroserviceChoiceReplacementsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='replacements', full_name='archivematica.ListMicroserviceChoiceReplacementsResponse.replacements', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=739,
  serialized_end=1148,
)


_SETMICROSERVICECHOICEREPLACEMENTREQUEST_ARGUMENTSENTRY = _descriptor.Descriptor(
  name='ArgumentsEntry',
  full_name='archivematica.SetMicroserviceChoiceReplacementRequest.ArgumentsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='archivematica.SetMicroserviceChoiceReplacementRequest.ArgumentsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='archivematica.SetMicroserviceChoiceReplacementRequest.ArgumentsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1100,
  serialized_end=1148,
)

_SETMICROSERVICECHOICEREPLACEMENTREQUEST = _descriptor.Descriptor(
  name='SetMicroserviceChoiceReplacementRequest',
  full_name='archivematica.SetMicroserviceChoiceReplacementRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='microserviceUUID', full_name='archivematica.SetMicroserviceChoiceReplacementRequest.microserviceUUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='archivematica.SetMicroserviceChoiceReplacementRequest.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arguments', full_name='archivematica.SetMicroserviceChoiceReplacementRequest.arguments', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETMICROSERVICECHOICEREPLACEMENTREQUEST_ARGUMENTSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1151,
  serialized_end=1379,
)


_LISTMICROSERVICECHOICEDUPLICATESREQUEST = _descriptor.Descriptor(
  name='ListMicroserviceChoiceDuplicatesRequest',
  full_name='archivematica.ListMicroserviceChoiceDuplicatesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='linkName', full_name='archivematica.ListMicroserviceChoiceDuplicatesRequest.linkName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='choiceName', full_name='archivematica.ListMicroserviceChoiceDuplicatesRequest.choiceName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1381,
  serialized_end=1460,
)


_LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE = _descriptor.Descriptor(
  name='Duplicate',
  full_name='archivematica.ListMicroserviceChoiceDuplicatesResponse.Duplicate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='srcUUID', full_name='archivematica.ListMicroserviceChoiceDuplicatesResponse.Duplicate.srcUUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dstUUID', full_name='archivematica.ListMicroserviceChoiceDuplicatesResponse.Duplicate.dstUUID', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1594,
  serialized_end=1639,
)

_LISTMICROSERVICECHOICEDUPLICATESRESPONSE = _descriptor.Descriptor(
  name='ListMicroserviceChoiceDuplicatesResponse',
  full_name='archivematica.ListMicroserviceChoiceDuplicatesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duplicates', full_name='archivematica.ListMicroserviceChoiceDuplicatesResponse.duplicates', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1463,
  serialized_end=1639,
)

_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_CHOICE.containing_type = _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB
_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB.fields_by_name['unitType'].enum_type = _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_UNITTYPE
_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB.fields_by_name['choices'].message_type = _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_CHOICE
_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB.containing_type = _LISTJOBSAWAITINGAPPROVALRESPONSE
_LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_UNITTYPE.containing_type = _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB
_LISTJOBSAWAITINGAPPROVALRESPONSE.fields_by_name['jobs'].message_type = _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB
_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT_ARGUMENTSENTRY.containing_type = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT
_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT.fields_by_name['arguments'].message_type = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT_ARGUMENTSENTRY
_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT.containing_type = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE
_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE.fields_by_name['replacements'].message_type = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT
_SETMICROSERVICECHOICEREPLACEMENTREQUEST_ARGUMENTSENTRY.containing_type = _SETMICROSERVICECHOICEREPLACEMENTREQUEST
_SETMICROSERVICECHOICEREPLACEMENTREQUEST.fields_by_name['arguments'].message_type = _SETMICROSERVICECHOICEREPLACEMENTREQUEST_ARGUMENTSENTRY
_LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE.containing_type = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE
_LISTMICROSERVICECHOICEDUPLICATESRESPONSE.fields_by_name['duplicates'].message_type = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['ApproveTransferRequest'] = _APPROVETRANSFERREQUEST
DESCRIPTOR.message_types_by_name['ApproveTransferResponse'] = _APPROVETRANSFERRESPONSE
DESCRIPTOR.message_types_by_name['ApproveJobRequest'] = _APPROVEJOBREQUEST
DESCRIPTOR.message_types_by_name['ApproveJobResponse'] = _APPROVEJOBRESPONSE
DESCRIPTOR.message_types_by_name['ListJobsAwaitingApprovalResponse'] = _LISTJOBSAWAITINGAPPROVALRESPONSE
DESCRIPTOR.message_types_by_name['ListMicroserviceChoiceReplacementsRequest'] = _LISTMICROSERVICECHOICEREPLACEMENTSREQUEST
DESCRIPTOR.message_types_by_name['ListMicroserviceChoiceReplacementsResponse'] = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE
DESCRIPTOR.message_types_by_name['SetMicroserviceChoiceReplacementRequest'] = _SETMICROSERVICECHOICEREPLACEMENTREQUEST
DESCRIPTOR.message_types_by_name['ListMicroserviceChoiceDuplicatesRequest'] = _LISTMICROSERVICECHOICEDUPLICATESREQUEST
DESCRIPTOR.message_types_by_name['ListMicroserviceChoiceDuplicatesResponse'] = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.Empty)
  ))
_sym_db.RegisterMessage(Empty)

ApproveTransferRequest = _reflection.GeneratedProtocolMessageType('ApproveTransferRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPROVETRANSFERREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ApproveTransferRequest)
  ))
_sym_db.RegisterMessage(ApproveTransferRequest)

ApproveTransferResponse = _reflection.GeneratedProtocolMessageType('ApproveTransferResponse', (_message.Message,), dict(
  DESCRIPTOR = _APPROVETRANSFERRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ApproveTransferResponse)
  ))
_sym_db.RegisterMessage(ApproveTransferResponse)

ApproveJobRequest = _reflection.GeneratedProtocolMessageType('ApproveJobRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPROVEJOBREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ApproveJobRequest)
  ))
_sym_db.RegisterMessage(ApproveJobRequest)

ApproveJobResponse = _reflection.GeneratedProtocolMessageType('ApproveJobResponse', (_message.Message,), dict(
  DESCRIPTOR = _APPROVEJOBRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ApproveJobResponse)
  ))
_sym_db.RegisterMessage(ApproveJobResponse)

ListJobsAwaitingApprovalResponse = _reflection.GeneratedProtocolMessageType('ListJobsAwaitingApprovalResponse', (_message.Message,), dict(

  Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(

    Choice = _reflection.GeneratedProtocolMessageType('Choice', (_message.Message,), dict(
      DESCRIPTOR = _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB_CHOICE,
      __module__ = 'mcpserver_pb2'
      # @@protoc_insertion_point(class_scope:archivematica.ListJobsAwaitingApprovalResponse.Job.Choice)
      ))
    ,
    DESCRIPTOR = _LISTJOBSAWAITINGAPPROVALRESPONSE_JOB,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:archivematica.ListJobsAwaitingApprovalResponse.Job)
    ))
  ,
  DESCRIPTOR = _LISTJOBSAWAITINGAPPROVALRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ListJobsAwaitingApprovalResponse)
  ))
_sym_db.RegisterMessage(ListJobsAwaitingApprovalResponse)
_sym_db.RegisterMessage(ListJobsAwaitingApprovalResponse.Job)
_sym_db.RegisterMessage(ListJobsAwaitingApprovalResponse.Job.Choice)

ListMicroserviceChoiceReplacementsRequest = _reflection.GeneratedProtocolMessageType('ListMicroserviceChoiceReplacementsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTMICROSERVICECHOICEREPLACEMENTSREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ListMicroserviceChoiceReplacementsRequest)
  ))
_sym_db.RegisterMessage(ListMicroserviceChoiceReplacementsRequest)

ListMicroserviceChoiceReplacementsResponse = _reflection.GeneratedProtocolMessageType('ListMicroserviceChoiceReplacementsResponse', (_message.Message,), dict(

  MicroserviceChoiceReplacement = _reflection.GeneratedProtocolMessageType('MicroserviceChoiceReplacement', (_message.Message,), dict(

    ArgumentsEntry = _reflection.GeneratedProtocolMessageType('ArgumentsEntry', (_message.Message,), dict(
      DESCRIPTOR = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT_ARGUMENTSENTRY,
      __module__ = 'mcpserver_pb2'
      # @@protoc_insertion_point(class_scope:archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.ArgumentsEntry)
      ))
    ,
    DESCRIPTOR = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:archivematica.ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement)
    ))
  ,
  DESCRIPTOR = _LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ListMicroserviceChoiceReplacementsResponse)
  ))
_sym_db.RegisterMessage(ListMicroserviceChoiceReplacementsResponse)
_sym_db.RegisterMessage(ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement)
_sym_db.RegisterMessage(ListMicroserviceChoiceReplacementsResponse.MicroserviceChoiceReplacement.ArgumentsEntry)

SetMicroserviceChoiceReplacementRequest = _reflection.GeneratedProtocolMessageType('SetMicroserviceChoiceReplacementRequest', (_message.Message,), dict(

  ArgumentsEntry = _reflection.GeneratedProtocolMessageType('ArgumentsEntry', (_message.Message,), dict(
    DESCRIPTOR = _SETMICROSERVICECHOICEREPLACEMENTREQUEST_ARGUMENTSENTRY,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:archivematica.SetMicroserviceChoiceReplacementRequest.ArgumentsEntry)
    ))
  ,
  DESCRIPTOR = _SETMICROSERVICECHOICEREPLACEMENTREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.SetMicroserviceChoiceReplacementRequest)
  ))
_sym_db.RegisterMessage(SetMicroserviceChoiceReplacementRequest)
_sym_db.RegisterMessage(SetMicroserviceChoiceReplacementRequest.ArgumentsEntry)

ListMicroserviceChoiceDuplicatesRequest = _reflection.GeneratedProtocolMessageType('ListMicroserviceChoiceDuplicatesRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTMICROSERVICECHOICEDUPLICATESREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ListMicroserviceChoiceDuplicatesRequest)
  ))
_sym_db.RegisterMessage(ListMicroserviceChoiceDuplicatesRequest)

ListMicroserviceChoiceDuplicatesResponse = _reflection.GeneratedProtocolMessageType('ListMicroserviceChoiceDuplicatesResponse', (_message.Message,), dict(

  Duplicate = _reflection.GeneratedProtocolMessageType('Duplicate', (_message.Message,), dict(
    DESCRIPTOR = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:archivematica.ListMicroserviceChoiceDuplicatesResponse.Duplicate)
    ))
  ,
  DESCRIPTOR = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:archivematica.ListMicroserviceChoiceDuplicatesResponse)
  ))
_sym_db.RegisterMessage(ListMicroserviceChoiceDuplicatesResponse)
_sym_db.RegisterMessage(ListMicroserviceChoiceDuplicatesResponse.Duplicate)


_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT_ARGUMENTSENTRY.has_options = True
_LISTMICROSERVICECHOICEREPLACEMENTSRESPONSE_MICROSERVICECHOICEREPLACEMENT_ARGUMENTSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_SETMICROSERVICECHOICEREPLACEMENTREQUEST_ARGUMENTSENTRY.has_options = True
_SETMICROSERVICECHOICEREPLACEMENTREQUEST_ARGUMENTSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class MCPServerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ApproveTransfer = channel.unary_unary(
        '/archivematica.MCPServer/ApproveTransfer',
        request_serializer=ApproveTransferRequest.SerializeToString,
        response_deserializer=ApproveTransferResponse.FromString,
        )
    self.ApproveJob = channel.unary_unary(
        '/archivematica.MCPServer/ApproveJob',
        request_serializer=ApproveJobRequest.SerializeToString,
        response_deserializer=ApproveJobResponse.FromString,
        )
    self.ListJobsAwaitingApproval = channel.unary_unary(
        '/archivematica.MCPServer/ListJobsAwaitingApproval',
        request_serializer=Empty.SerializeToString,
        response_deserializer=ListJobsAwaitingApprovalResponse.FromString,
        )
    self.ListMicroserviceChoiceReplacements = channel.unary_unary(
        '/archivematica.MCPServer/ListMicroserviceChoiceReplacements',
        request_serializer=ListMicroserviceChoiceReplacementsRequest.SerializeToString,
        response_deserializer=ListMicroserviceChoiceReplacementsResponse.FromString,
        )
    self.SetMicroserviceChoiceReplacement = channel.unary_unary(
        '/archivematica.MCPServer/SetMicroserviceChoiceReplacement',
        request_serializer=SetMicroserviceChoiceReplacementRequest.SerializeToString,
        response_deserializer=Empty.FromString,
        )
    self.ListMicroserviceChoiceDuplicates = channel.unary_unary(
        '/archivematica.MCPServer/ListMicroserviceChoiceDuplicates',
        request_serializer=ListMicroserviceChoiceDuplicatesRequest.SerializeToString,
        response_deserializer=ListMicroserviceChoiceDuplicatesResponse.FromString,
        )


class MCPServerServicer(object):

  def ApproveTransfer(self, request, context):
    """Approve a transfer
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ApproveJob(self, request, context):
    """Approve a job
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListJobsAwaitingApproval(self, request, context):
    """List jobs awaiting for approval
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListMicroserviceChoiceReplacements(self, request, context):
    """List of microservice choice replacements
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetMicroserviceChoiceReplacement(self, request, context):
    """Update a microservice choice replacement
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListMicroserviceChoiceDuplicates(self, request, context):
    """TEMPORARY! Used in the Dashboard but it should be done differently in the future.
    The Dashboard should stop generating the configuration files.
    Related: https://github.com/artefactual/archivematica/pull/493
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MCPServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ApproveTransfer': grpc.unary_unary_rpc_method_handler(
          servicer.ApproveTransfer,
          request_deserializer=ApproveTransferRequest.FromString,
          response_serializer=ApproveTransferResponse.SerializeToString,
      ),
      'ApproveJob': grpc.unary_unary_rpc_method_handler(
          servicer.ApproveJob,
          request_deserializer=ApproveJobRequest.FromString,
          response_serializer=ApproveJobResponse.SerializeToString,
      ),
      'ListJobsAwaitingApproval': grpc.unary_unary_rpc_method_handler(
          servicer.ListJobsAwaitingApproval,
          request_deserializer=Empty.FromString,
          response_serializer=ListJobsAwaitingApprovalResponse.SerializeToString,
      ),
      'ListMicroserviceChoiceReplacements': grpc.unary_unary_rpc_method_handler(
          servicer.ListMicroserviceChoiceReplacements,
          request_deserializer=ListMicroserviceChoiceReplacementsRequest.FromString,
          response_serializer=ListMicroserviceChoiceReplacementsResponse.SerializeToString,
      ),
      'SetMicroserviceChoiceReplacement': grpc.unary_unary_rpc_method_handler(
          servicer.SetMicroserviceChoiceReplacement,
          request_deserializer=SetMicroserviceChoiceReplacementRequest.FromString,
          response_serializer=Empty.SerializeToString,
      ),
      'ListMicroserviceChoiceDuplicates': grpc.unary_unary_rpc_method_handler(
          servicer.ListMicroserviceChoiceDuplicates,
          request_deserializer=ListMicroserviceChoiceDuplicatesRequest.FromString,
          response_serializer=ListMicroserviceChoiceDuplicatesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'archivematica.MCPServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaMCPServerServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def ApproveTransfer(self, request, context):
    """Approve a transfer
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ApproveJob(self, request, context):
    """Approve a job
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListJobsAwaitingApproval(self, request, context):
    """List jobs awaiting for approval
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListMicroserviceChoiceReplacements(self, request, context):
    """List of microservice choice replacements
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def SetMicroserviceChoiceReplacement(self, request, context):
    """Update a microservice choice replacement
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListMicroserviceChoiceDuplicates(self, request, context):
    """TEMPORARY! Used in the Dashboard but it should be done differently in the future.
    The Dashboard should stop generating the configuration files.
    Related: https://github.com/artefactual/archivematica/pull/493
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaMCPServerStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def ApproveTransfer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Approve a transfer
    """
    raise NotImplementedError()
  ApproveTransfer.future = None
  def ApproveJob(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Approve a job
    """
    raise NotImplementedError()
  ApproveJob.future = None
  def ListJobsAwaitingApproval(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """List jobs awaiting for approval
    """
    raise NotImplementedError()
  ListJobsAwaitingApproval.future = None
  def ListMicroserviceChoiceReplacements(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """List of microservice choice replacements
    """
    raise NotImplementedError()
  ListMicroserviceChoiceReplacements.future = None
  def SetMicroserviceChoiceReplacement(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """Update a microservice choice replacement
    """
    raise NotImplementedError()
  SetMicroserviceChoiceReplacement.future = None
  def ListMicroserviceChoiceDuplicates(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """TEMPORARY! Used in the Dashboard but it should be done differently in the future.
    The Dashboard should stop generating the configuration files.
    Related: https://github.com/artefactual/archivematica/pull/493
    """
    raise NotImplementedError()
  ListMicroserviceChoiceDuplicates.future = None


def beta_create_MCPServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('archivematica.MCPServer', 'ApproveJob'): ApproveJobRequest.FromString,
    ('archivematica.MCPServer', 'ApproveTransfer'): ApproveTransferRequest.FromString,
    ('archivematica.MCPServer', 'ListJobsAwaitingApproval'): Empty.FromString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesRequest.FromString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceReplacements'): ListMicroserviceChoiceReplacementsRequest.FromString,
    ('archivematica.MCPServer', 'SetMicroserviceChoiceReplacement'): SetMicroserviceChoiceReplacementRequest.FromString,
  }
  response_serializers = {
    ('archivematica.MCPServer', 'ApproveJob'): ApproveJobResponse.SerializeToString,
    ('archivematica.MCPServer', 'ApproveTransfer'): ApproveTransferResponse.SerializeToString,
    ('archivematica.MCPServer', 'ListJobsAwaitingApproval'): ListJobsAwaitingApprovalResponse.SerializeToString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesResponse.SerializeToString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceReplacements'): ListMicroserviceChoiceReplacementsResponse.SerializeToString,
    ('archivematica.MCPServer', 'SetMicroserviceChoiceReplacement'): Empty.SerializeToString,
  }
  method_implementations = {
    ('archivematica.MCPServer', 'ApproveJob'): face_utilities.unary_unary_inline(servicer.ApproveJob),
    ('archivematica.MCPServer', 'ApproveTransfer'): face_utilities.unary_unary_inline(servicer.ApproveTransfer),
    ('archivematica.MCPServer', 'ListJobsAwaitingApproval'): face_utilities.unary_unary_inline(servicer.ListJobsAwaitingApproval),
    ('archivematica.MCPServer', 'ListMicroserviceChoiceDuplicates'): face_utilities.unary_unary_inline(servicer.ListMicroserviceChoiceDuplicates),
    ('archivematica.MCPServer', 'ListMicroserviceChoiceReplacements'): face_utilities.unary_unary_inline(servicer.ListMicroserviceChoiceReplacements),
    ('archivematica.MCPServer', 'SetMicroserviceChoiceReplacement'): face_utilities.unary_unary_inline(servicer.SetMicroserviceChoiceReplacement),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_MCPServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('archivematica.MCPServer', 'ApproveJob'): ApproveJobRequest.SerializeToString,
    ('archivematica.MCPServer', 'ApproveTransfer'): ApproveTransferRequest.SerializeToString,
    ('archivematica.MCPServer', 'ListJobsAwaitingApproval'): Empty.SerializeToString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesRequest.SerializeToString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceReplacements'): ListMicroserviceChoiceReplacementsRequest.SerializeToString,
    ('archivematica.MCPServer', 'SetMicroserviceChoiceReplacement'): SetMicroserviceChoiceReplacementRequest.SerializeToString,
  }
  response_deserializers = {
    ('archivematica.MCPServer', 'ApproveJob'): ApproveJobResponse.FromString,
    ('archivematica.MCPServer', 'ApproveTransfer'): ApproveTransferResponse.FromString,
    ('archivematica.MCPServer', 'ListJobsAwaitingApproval'): ListJobsAwaitingApprovalResponse.FromString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesResponse.FromString,
    ('archivematica.MCPServer', 'ListMicroserviceChoiceReplacements'): ListMicroserviceChoiceReplacementsResponse.FromString,
    ('archivematica.MCPServer', 'SetMicroserviceChoiceReplacement'): Empty.FromString,
  }
  cardinalities = {
    'ApproveJob': cardinality.Cardinality.UNARY_UNARY,
    'ApproveTransfer': cardinality.Cardinality.UNARY_UNARY,
    'ListJobsAwaitingApproval': cardinality.Cardinality.UNARY_UNARY,
    'ListMicroserviceChoiceDuplicates': cardinality.Cardinality.UNARY_UNARY,
    'ListMicroserviceChoiceReplacements': cardinality.Cardinality.UNARY_UNARY,
    'SetMicroserviceChoiceReplacement': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'archivematica.MCPServer', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
